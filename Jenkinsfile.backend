pipeline {
    agent any

    environment {
        // AWS_ACCOUNT_ID, AWS_REGION, AWS_CREDENTIALS_ID are expected to be in the Jenkins execution environment
        ECR_REPO = 'backend'
        IMAGE_TAG = 'latest' //"${env.BUILD_NUMBER}"
        ECR_URI = "${env.AWS_ACCOUNT_ID}.dkr.ecr.${env.AWS_REGION}.amazonaws.com/${ECR_REPO}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build Docker Image') {
            steps {
                dir('backend') {
                    script {
                        sh "docker build -t ${ECR_REPO}:${IMAGE_TAG} ."
                    }
                }
            }
        }
        stage('Login to ECR') {
            steps {
                // Ensure AWS_CREDENTIALS_ID in the environment refers to a Jenkins AWS Credentials type ID
                withAWS(credentials: env.AWS_CREDENTIALS_ID, region: env.AWS_REGION) {
                    script {
                        sh """
                        aws ecr get-login-password --region ${env.AWS_REGION} | \\
                        docker login --username AWS --password-stdin ${env.ECR_URI}
                        """
                    }
                }
            }
        }
        stage('Tag & Push Image') {
            steps {
                script {
                    sh """
                    docker tag ${ECR_REPO}:${IMAGE_TAG} ${env.ECR_URI}:${IMAGE_TAG}
                    docker push ${env.ECR_URI}:${IMAGE_TAG}
                    """
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
pipeline {
    agent any

    environment {
        // AWS_ACCOUNT_ID, AWS_REGION, AWS_CREDENTIALS_ID are expected to be in the Jenkins execution environment
        ECR_REPO = 'frontend'
        IMAGE_TAG = 'latest' //"${env.BUILD_NUMBER}"
        // ECR_URI = "${env.AWS_ACCOUNT_ID}.dkr.ecr.${env.AWS_REGION}.amazonaws.com/${ECR_REPO}"
    }

    stages {
        stage('Set Env Variable') {
            steps {
                withCredentials([string(credentialsId: 'AWS_ACCOUNT_ID', variable: 'ACCOUNT_ID')]) {
                    script {
                        env.AWS_ACCOUNT_ID = ACCOUNT_ID
                    }
                }

                withCredentials([string(credentialsId: 'AWS_REGION', variable: 'AWS_REGION')]) {
                    script {
                        env.AWS_REGION = AWS_REGION
                    }
                }

                echo "AWS Account ID is: ${env.AWS_ACCOUNT_ID}"
                echo "AWS Region is: ${env.AWS_REGION}"
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build Docker Image') {
            steps {
                dir('frontend') {
                    script {
                        sh "docker build -t ${ECR_REPO}:${IMAGE_TAG} ."
                    }
                }
            }
        }
        // stage('Login to ECR') {
        //     steps {
        //         // Ensure AWS_CREDENTIALS_ID in the environment refers to a Jenkins AWS Credentials type ID
        //         withAWS(credentials: env.AWS_CREDENTIALS_ID, region: env.AWS_REGION) {
        //             script {
        //                 sh """
        //                 aws ecr get-login-password --region ${env.AWS_REGION} | \\
        //                 docker login --username AWS --password-stdin ${env.ECR_URI}
        //                 """
        //             }
        //         }
        //     }
        // }
        // stage('Tag & Push Image') {
        //     steps {
        //         script {
        //             sh """
        //             docker tag ${ECR_REPO}:${IMAGE_TAG} ${env.ECR_URI}:${IMAGE_TAG}
        //             docker push ${env.ECR_URI}:${IMAGE_TAG}
        //             """
        //         }
        //     }
        // }
        stage('Deploy') {
            steps {
                script{
                    docker.withRegistry("https://${env.AWS_ACCOUNT_ID}.dkr.ecr.${env.AWS_REGION}.amazonaws.com/${ECR_REPO}", 'ecr:us-east-1:AWS_CREDENTIALS_ID') {
                    app.push("${env.BUILD_NUMBER}")
                    app.push("latest")
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}